plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm'
    id 'com.github.johnrengelman.shadow'
    id 'io.github.0ffz.github-packages'
}

group 'com.derongan.minecraft'
version pluginVersion

if (project.hasProperty("buildNo")) version += ".$buildNo"

java {
    sourceCompatibility JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'http://www.rutgerkok.nl/repo' }
    maven githubPackage.invoke("MineInAbyss/Idofront")
    maven githubPackage.invoke("rutgerkok/BlockLocker")
}

publishing {
    repositories {
        maven githubPackage.invoke("MineInAbyss/DeeperWorld")
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.16.1-R0.1-SNAPSHOT'
    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compileOnly 'nl.rutgerkok:blocklocker:1.6.2-SNAPSHOT'

    implementation 'com.mineinabyss:idofront:0.1.+'

    testImplementation 'junit:junit:4.12'
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    filter ReplaceTokens, tokens: [version: version]
}

shadowJar {
    getArchiveClassifier().set(null)
    relocate 'com.mineinabyss.idofront', "${project.group}.${project.name}.idofront"
    minimize()
}
build.dependsOn shadowJar

//Move into plugins folder
if (project.hasProperty("plugin_path") && plugin_path) {
    println("Copying to plugin directory $plugin_path")
    task copyJar(type: Copy) {
        from shadowJar // here it automatically reads jar file produced from jar task
        into plugin_path
    }
    build.dependsOn copyJar
}

compileKotlin { kotlinOptions { jvmTarget = "1.8" } }
compileTestKotlin { kotlinOptions { jvmTarget = "1.8" } }